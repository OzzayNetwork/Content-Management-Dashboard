(function(){"use strict";try{if(typeof document<"u"){var o=document.createElement("style");o.appendChild(document.createTextNode('@keyframes spinner-circle-animation-ed866313{0%,39%,to{opacity:0}40%{opacity:1}}.spinner[data-v-ed866313]{position:relative;width:var(--vs-spinner-size);height:var(--vs-spinner-size);margin:0;padding:0}.spinner-circle[data-v-ed866313]{width:100%;height:100%;position:absolute;left:0;top:0}.spinner-circle[data-v-ed866313]:before{content:"";display:block;margin:0 auto;width:15%;height:15%;background-color:var(--vs-spinner-color);border-radius:100%;-webkit-animation:spinner-circle-animation-ed866313 1.2s infinite ease-in-out both;animation:spinner-circle-animation-ed866313 1.2s infinite ease-in-out both}.spinner-circle[data-v-ed866313]:nth-child(2){transform:rotate(30deg)}.spinner-circle[data-v-ed866313]:nth-child(3){transform:rotate(60deg)}.spinner-circle[data-v-ed866313]:nth-child(4){transform:rotate(90deg)}.spinner-circle[data-v-ed866313]:nth-child(5){transform:rotate(120deg)}.spinner-circle[data-v-ed866313]:nth-child(6){transform:rotate(150deg)}.spinner-circle[data-v-ed866313]:nth-child(7){transform:rotate(180deg)}.spinner-circle[data-v-ed866313]:nth-child(8){transform:rotate(210deg)}.spinner-circle[data-v-ed866313]:nth-child(9){transform:rotate(240deg)}.spinner-circle[data-v-ed866313]:nth-child(10){transform:rotate(270deg)}.spinner-circle[data-v-ed866313]:nth-child(11){transform:rotate(300deg)}.spinner-circle[data-v-ed866313]:nth-child(12){transform:rotate(330deg)}.spinner-circle[data-v-ed866313]:nth-child(2):before{animation-delay:-1.1s}.spinner-circle[data-v-ed866313]:nth-child(3):before{animation-delay:-1s}.spinner-circle[data-v-ed866313]:nth-child(4):before{animation-delay:-.9s}.spinner-circle[data-v-ed866313]:nth-child(5):before{animation-delay:-.8s}.spinner-circle[data-v-ed866313]:nth-child(6):before{animation-delay:-.7s}.spinner-circle[data-v-ed866313]:nth-child(7):before{animation-delay:-.6s}.spinner-circle[data-v-ed866313]:nth-child(8):before{animation-delay:-.5s}.spinner-circle[data-v-ed866313]:nth-child(9):before{animation-delay:-.4s}.spinner-circle[data-v-ed866313]:nth-child(10):before{animation-delay:-.3s}.spinner-circle[data-v-ed866313]:nth-child(11):before{animation-delay:-.2s}.spinner-circle[data-v-ed866313]:nth-child(12):before{animation-delay:-.1s}.indicators-container[data-v-f0250ade]{display:flex;align-items:center;align-self:stretch;flex-shrink:0;gap:var(--vs-indicators-gap);padding:var(--vs-padding)}.clear-button[data-v-f0250ade]{appearance:none;display:inline-block;padding:0;margin:0;border:0;width:var(--vs-indicator-icon-size);height:var(--vs-indicator-icon-size);color:var(--vs-indicator-icon-color);background:none;outline:none;cursor:var(--vs-indicator-icon-cursor)}.dropdown-icon[data-v-f0250ade]{appearance:none;display:inline-block;padding:0;margin:0;border:0;width:var(--vs-indicator-icon-size);height:var(--vs-indicator-icon-size);color:var(--vs-indicator-icon-color);background:none;outline:none;cursor:var(--vs-indicator-icon-cursor);transition:var(--vs-indicator-dropdown-icon-transition)}.dropdown-icon.active[data-v-f0250ade]{transform:rotate(180deg)}[data-v-4c5f8027]{box-sizing:border-box}.menu-option[data-v-4c5f8027]{display:flex;width:var(--vs-option-width);border:0;margin:0;padding:var(--vs-option-padding);font-size:var(--vs-option-font-size);font-weight:var(--vs-option-font-weight);font-family:var(--vs-font-family);color:var(--vs-option-text-color);white-space:break-spaces;background-color:var(--vs-option-background-color);text-align:var(--vs-option-text-align);cursor:var(--vs-option-cursor)}.menu-option[data-v-4c5f8027]:hover{background-color:var(--vs-option-hover-background-color);color:var(--vs-option-hover-text-color)}.menu-option.focused[data-v-4c5f8027]{background-color:var(--vs-option-focused-background-color);color:var(--vs-option-focused-text-color)}.menu-option.selected[data-v-4c5f8027]{background-color:var(--vs-option-selected-background-color);color:var(--vs-option-selected-text-color)}.menu-option.disabled[data-v-4c5f8027]{background-color:var(--vs-option-disabled-background-color);color:var(--vs-option-disabled-text-color)}[data-v-5c36e7d3]{box-sizing:border-box}.menu[data-v-5c36e7d3]{position:absolute;margin-top:var(--vs-menu-offset-top);max-height:var(--vs-menu-height);overflow-y:auto;border:var(--vs-menu-border);border-radius:var(--vs-border-radius);box-shadow:var(--vs-menu-box-shadow);background-color:var(--vs-menu-background-color);z-index:var(--vs-menu-z-index)}.no-results[data-v-5c36e7d3]{padding:var(--vs-option-padding);font-size:var(--vs-font-size);font-family:var(--vs-font-family);color:var(--vs-text-color)}.taggable-no-options[data-v-5c36e7d3]{padding:var(--vs-option-padding);font-size:var(--vs-font-size);font-family:var(--vs-font-family);color:var(--vs-text-color);cursor:pointer}.multi-value[data-v-dfb6ab09]{display:flex;min-width:0px;margin:var(--vs-multi-value-margin);border-radius:var(--vs-multi-value-border-radius);background:var(--vs-multi-value-background-color)}.multi-value-label[data-v-dfb6ab09]{padding:var(--vs-multi-value-label-padding);border:var(--vs-multi-value-border);border-radius:var(--vs-multi-value-border-radius);overflow:hidden;text-overflow:ellipsis;white-space:nowrap;font-size:var(--vs-multi-value-label-font-size);font-weight:var(--vs-multi-value-label-font-weight);line-height:var(--vs-multi-value-label-line-height);color:var(--vs-multi-value-label-text-color)}.multi-value-remove[data-v-dfb6ab09]{border-radius:var(--vs-multi-value-border-radius);appearance:none;display:flex;align-items:center;padding:var(--vs-multi-value-delete-padding);border:none;outline:none;cursor:var(--vs-multi-value-xmark-cursor);background-color:var(--vs-multi-value-background-color)}.multi-value-remove[data-v-dfb6ab09]:hover{background-color:var(--vs-multi-value-delete-hover-background-color)}.multi-value-remove svg[data-v-dfb6ab09]{width:var(--vs-multi-value-xmark-size);height:var(--vs-multi-value-xmark-size);fill:var(--vs-multi-value-xmark-color)}.multi-value-remove:hover svg[data-v-dfb6ab09]{fill:var(--vs-multi-value-xmark-hover-color)}.input-placeholder[data-v-d650edcf]{grid-area:1 / 1 / 2 / 3;color:var(--vs-placeholder-color)}:root{--vs-width: 100%;--vs-min-height: 38px;--vs-padding: 4px 8px;--vs-border: 1px solid #e4e4e7;--vs-border-radius: 4px;--vs-font-size: 16px;--vs-font-weight: 400;--vs-font-family: inherit;--vs-text-color: #18181b;--vs-line-height: 1.5;--vs-placeholder-color: #52525b;--vs-background-color: #fff;--vs-disabled-background-color: #f4f4f5;--vs-outline-width: 1px;--vs-outline-color: #3b82f6;--vs-menu-offset-top: 8px;--vs-menu-height: 200px;--vs-menu-border: var(--vs-border);--vs-menu-background-color: var(--vs-background-color);--vs-menu-box-shadow: 0 1px 2px 0 rgb(0 0 0 / .05);--vs-menu-z-index: 2;--vs-option-width: 100%;--vs-option-padding: 8px 12px;--vs-option-cursor: pointer;--vs-option-font-size: var(--vs-font-size);--vs-option-font-weight: var(--vs-font-weight);--vs-option-text-align: -webkit-auto;--vs-option-text-color: var(--vs-text-color);--vs-option-hover-text-color: var(--vs-text-color);--vs-option-focused-text-color: var(--vs-text-color);--vs-option-selected-text-color: var(--vs-text-color);--vs-option-disabled-text-color: #52525b;--vs-option-background-color: var(--vs-menu-background);--vs-option-hover-background-color: #dbeafe;--vs-option-focused-background-color: var(--vs-option-hover-background-color);--vs-option-selected-background-color: #93c5fd;--vs-option-disabled-background-color: #f4f4f5;--vs-option-opacity-menu-open: .4;--vs-multi-value-margin: 2px;--vs-multi-value-border: 0px;--vs-multi-value-border-radius: 2px;--vs-multi-value-background-color: #f4f4f5;--vs-multi-value-label-padding: 4px 4px 4px 8px;--vs-multi-value-label-font-size: 12px;--vs-multi-value-label-font-weight: 400;--vs-multi-value-label-line-height: 1;--vs-multi-value-label-text-color: #3f3f46;--vs-multi-value-delete-padding: 0 3px;--vs-multi-value-delete-hover-background-color: #FF6467;--vs-multi-value-xmark-size: 16px;--vs-multi-value-xmark-cursor: pointer;--vs-multi-value-xmark-color: var(--vs-multi-value-label-text-color);--vs-multi-value-xmark-hover-color: #fff;--vs-indicators-gap: 0px;--vs-indicator-icon-size: 20px;--vs-indicator-icon-color: var(--vs-text-color);--vs-indicator-icon-cursor: pointer;--vs-indicator-dropdown-icon-transition: transform .2s ease-out;--vs-spinner-color: var(--vs-text-color);--vs-spinner-size: 16px}[data-v-c5806535]{box-sizing:border-box}.vue-select[data-v-c5806535]{position:relative;box-sizing:border-box;width:var(--vs-width)}.control[data-v-c5806535]{display:flex;flex-wrap:wrap;align-items:center;justify-content:space-between;min-height:var(--vs-min-height);border:var(--vs-border);border-radius:var(--vs-border-radius);background-color:var(--vs-background-color)}.control.focused[data-v-c5806535]{box-shadow:0 0 0 var(--vs-outline-width) var(--vs-outline-color);border-color:var(--vs-outline-color)}.control.disabled[data-v-c5806535]{background-color:var(--vs-disabled-background-color)}.value-container[data-v-c5806535]{position:relative;overflow:hidden;display:grid;align-items:center;flex:1 1 0%;padding:var(--vs-padding)}.value-container.multi.has-value[data-v-c5806535]{display:flex;flex-wrap:wrap}.single-value[data-v-c5806535]{display:block;grid-area:1 / 1 / 2 / 3;max-width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;font-size:var(--vs-font-size);font-weight:var(--vs-font-weight);font-family:var(--vs-font-family);line-height:var(--vs-line-height);color:var(--vs-text-color)}.vue-select[data-state=open] .single-value[data-v-c5806535]{opacity:var(--vs-option-opacity-menu-open)}.vue-select.typing .single-value[data-v-c5806535]{opacity:0}.input-container[data-v-c5806535]{visibility:visible;display:inline-grid;grid-area:1 / 1 / 2 / 3;grid-template-columns:0px min-content}.input-container.typing[data-v-c5806535]{transform:translateZ(0)}.input-container.typing[data-v-c5806535]:after{content:attr(data-value) " ";visibility:hidden;white-space:pre;grid-area:1 / 2;min-width:2px;padding:0;margin:0;border:0}.search-input[data-v-c5806535]{margin:0;padding:0;border:0;min-width:2px;width:100%;grid-area:1 / 2;background:0px center;font-size:var(--vs-font-size);font-family:var(--vs-font-family);line-height:var(--vs-line-height);color:var(--vs-text-color);opacity:1;outline:none}')),document.head.appendChild(o)}}catch(e){console.error("vite-plugin-css-injected-by-js",e)}})();
import { createElementBlock as c, openBlock as n, createElementVNode as C, Fragment as $, renderList as q, defineComponent as A, useTemplateRef as D, createCommentVNode as I, createBlock as b, withModifiers as N, resolveDynamicComponent as _, normalizeClass as w, ref as T, watch as P, withKeys as le, renderSlot as te, mergeModels as F, useModel as H, inject as U, onMounted as ae, onBeforeUnmount as oe, normalizeStyle as ne, unref as r, withCtx as se, createTextVNode as L, toDisplayString as R, createVNode as j, useSlots as ie, computed as W, provide as z, withDirectives as ue, vModelText as de, Teleport as re } from "vue";
const S = (p, i) => {
  const e = p.__vccOpts || p;
  for (const [s, l] of i)
    e[s] = l;
  return e;
}, ce = {}, pe = {
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 20 20",
  fill: "currentColor"
};
function ve(p, i) {
  return n(), c("svg", pe, i[0] || (i[0] = [
    C("path", {
      "fill-rule": "evenodd",
      d: "M5.22 8.22a.75.75 0 0 1 1.06 0L10 11.94l3.72-3.72a.75.75 0 1 1 1.06 1.06l-4.25 4.25a.75.75 0 0 1-1.06 0L5.22 9.28a.75.75 0 0 1 0-1.06Z",
      "clip-rule": "evenodd"
    }, null, -1)
  ]));
}
const fe = /* @__PURE__ */ S(ce, [["render", ve]]), me = {}, be = {
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 20 20",
  fill: "currentColor"
};
function ye(p, i) {
  return n(), c("svg", be, i[0] || (i[0] = [
    C("path", { d: "M6.28 5.22a.75.75 0 0 0-1.06 1.06L8.94 10l-3.72 3.72a.75.75 0 1 0 1.06 1.06L10 11.06l3.72 3.72a.75.75 0 1 0 1.06-1.06L11.06 10l3.72-3.72a.75.75 0 0 0-1.06-1.06L10 8.94 6.28 5.22Z" }, null, -1)
  ]));
}
const Y = /* @__PURE__ */ S(me, [["render", ye]]), ge = {}, he = { className: "spinner" };
function Oe(p, i) {
  return n(), c("div", he, [
    (n(), c($, null, q(12, (e) => C("div", {
      key: e,
      class: "spinner-circle"
    })), 64))
  ]);
}
const ke = /* @__PURE__ */ S(ge, [["render", Oe], ["__scopeId", "data-v-ed866313"]]), we = {
  ref: "container",
  class: "indicators-container"
}, Me = ["disabled"], $e = ["disabled"], _e = /* @__PURE__ */ A({
  __name: "Indicators",
  props: {
    hasSelectedOption: { type: Boolean },
    isMenuOpen: { type: Boolean },
    isClearable: { type: Boolean },
    isLoading: { type: Boolean },
    isDisabled: { type: Boolean },
    slots: {}
  },
  emits: ["clear", "toggle"],
  setup(p, { expose: i, emit: e }) {
    const s = p, l = e, o = D("container"), h = D("clearButton"), O = D("dropdownButton");
    return i({ containerRef: o, clearButtonRef: h, dropdownButtonRef: O }), (y, a) => (n(), c("div", we, [
      y.hasSelectedOption && y.isClearable && !y.isLoading ? (n(), c("button", {
        key: 0,
        ref: "clearButton",
        type: "button",
        class: "clear-button",
        tabindex: "-1",
        disabled: y.isDisabled,
        onClick: a[0] || (a[0] = N((u) => l("clear"), ["stop"]))
      }, [
        s.slots.clear ? (n(), b(_(s.slots.clear), { key: 0 })) : (n(), b(Y, { key: 1 }))
      ], 8, Me)) : I("", !0),
      y.isLoading ? I("", !0) : (n(), c("button", {
        key: 1,
        ref: "dropdownButton",
        type: "button",
        class: w(["dropdown-icon", { active: y.isMenuOpen }]),
        tabindex: "-1",
        disabled: y.isDisabled,
        onClick: a[1] || (a[1] = N((u) => l("toggle"), ["stop"]))
      }, [
        s.slots.dropdown ? (n(), b(_(s.slots.dropdown), { key: 0 })) : (n(), b(fe, { key: 1 }))
      ], 10, $e)),
      s.slots.loading ? (n(), b(_(s.slots.loading), { key: 2 })) : (n(), c($, { key: 3 }, [
        y.isLoading ? (n(), b(ke, { key: 0 })) : I("", !0)
      ], 64))
    ], 512));
  }
}), Be = /* @__PURE__ */ S(_e, [["__scopeId", "data-v-f0250ade"]]), Z = Symbol("props"), X = Symbol("data");
let Ce = 0;
function Se() {
  return ++Ce;
}
const Ve = ["aria-disabled", "aria-selected"], De = /* @__PURE__ */ A({
  __name: "MenuOption",
  props: {
    menu: {},
    index: {},
    isFocused: { type: Boolean },
    isSelected: { type: Boolean },
    isDisabled: { type: Boolean }
  },
  emits: ["select"],
  setup(p, { emit: i }) {
    const e = p, s = i, l = T(null);
    return P(
      () => e.isFocused,
      () => {
        if (e.isFocused && e.menu) {
          const o = e.menu.children[e.index], h = o.offsetTop, O = h + o.clientHeight, y = e.menu.scrollTop, a = e.menu.clientHeight;
          h < y ? e.menu.scrollTop = h : O > y + a && (e.menu.scrollTop = O - a);
        }
      }
    ), (o, h) => (n(), c("div", {
      ref_key: "option",
      ref: l,
      class: w(["menu-option", { focused: o.isFocused, selected: o.isSelected, disabled: o.isDisabled }]),
      tabindex: "-1",
      role: "option",
      "aria-disabled": o.isDisabled,
      "aria-selected": o.isSelected,
      onClick: h[0] || (h[0] = (O) => s("select")),
      onKeydown: h[1] || (h[1] = le((O) => s("select"), ["enter"]))
    }, [
      te(o.$slots, "default", {}, void 0, !0)
    ], 42, Ve));
  }
}), Ie = /* @__PURE__ */ S(De, [["__scopeId", "data-v-4c5f8027"]]), Le = ["id", "aria-label", "aria-multiselectable"], Re = /* @__PURE__ */ A({
  __name: "Menu",
  props: /* @__PURE__ */ F({
    slots: {}
  }, {
    modelValue: { required: !0 },
    modelModifiers: {}
  }),
  emits: ["update:modelValue"],
  setup(p) {
    const i = p, e = H(p, "modelValue"), s = U(Z), l = U(X), o = D("menu"), h = () => {
      if (l.containerRef.value) {
        const a = l.containerRef.value.getBoundingClientRect();
        return {
          left: `${a.x}px`,
          top: `${a.y + a.height}px`
        };
      }
      return console.warn("Unable to calculate dynamic menu position because of missing internal DOM reference."), { top: "0px", left: "0px" };
    }, O = (a) => {
      if (l.menuOpen.value) {
        const u = l.focusedOption.value;
        if (a.key === "ArrowDown") {
          a.preventDefault();
          const f = l.availableOptions.value.findIndex((k, M) => !k.disabled && M > u), g = l.availableOptions.value.findIndex((k) => !k.disabled);
          l.focusedOption.value = f === -1 ? g : f;
        }
        if (a.key === "ArrowUp") {
          a.preventDefault();
          const f = l.availableOptions.value.reduce(
            (k, M, V) => !M.disabled && V < u ? V : k,
            -1
          ), g = l.availableOptions.value.reduce(
            (k, M, V) => M.disabled ? k : V,
            -1
          );
          l.focusedOption.value = f === -1 ? g : f;
        }
        if (a.key === "Enter") {
          const f = l.availableOptions.value[u];
          a.preventDefault(), f ? l.setOption(f) : s.isTaggable && l.search.value && l.createOption();
        }
        if (a.code === "Space" && l.search.value.length === 0) {
          const f = l.availableOptions.value[u];
          a.preventDefault(), f && l.setOption(f);
        }
        a.key === "Escape" && (a.preventDefault(), l.closeMenu());
        const m = s.isMulti && Array.isArray(e.value) ? e.value.length > 0 : !!e.value;
        a.key === "Backspace" && l.search.value.length === 0 && m && (a.preventDefault(), s.isMulti && Array.isArray(e.value) ? e.value = e.value.slice(0, -1) : e.value = void 0);
      }
    }, y = (a) => {
      const u = a.target, m = l.containerRef.value && l.containerRef.value.contains(u), f = o.value && o.value.contains(u);
      !m && !f && l.closeMenu();
    };
    return ae(() => {
      document.addEventListener("keydown", O), document.addEventListener("click", y);
    }), oe(() => {
      document.removeEventListener("keydown", O), document.removeEventListener("click", y);
    }), (a, u) => (n(), c("div", {
      id: `vue-select-${r(s).uid}-listbox`,
      ref: "menu",
      class: w(["menu", r(s).classes?.menuContainer]),
      role: "listbox",
      "aria-label": r(s).aria?.labelledby,
      "aria-multiselectable": r(s).isMulti,
      style: ne({
        width: r(s).teleport ? `${r(l).containerRef?.value?.getBoundingClientRect().width}px` : "100%",
        top: r(s).teleport ? h().top : "unset",
        left: r(s).teleport ? h().left : "unset"
      })
    }, [
      (n(!0), c($, null, q(r(l).availableOptions.value, (m, f) => (n(), b(Ie, {
        key: f,
        type: "button",
        menu: o.value,
        index: f,
        "is-focused": r(l).focusedOption.value === f,
        "is-selected": Array.isArray(e.value) ? e.value.includes(m.value) : m.value === e.value,
        "is-disabled": m.disabled || !1,
        class: w(r(s).classes?.menuOption),
        onSelect: (g) => r(l).setOption(m)
      }, {
        default: se(() => [
          (n(), b(_(i.slots["menu-header"]))),
          i.slots.option ? (n(), b(_(i.slots.option), {
            key: 0,
            option: m,
            index: f,
            "is-focused": r(l).focusedOption.value === f,
            "is-selected": Array.isArray(e.value) ? e.value.includes(m.value) : m.value === e.value,
            "is-disabled": m.disabled || !1
          }, null, 8, ["option", "index", "is-focused", "is-selected", "is-disabled"])) : r(s).getOptionLabel ? (n(), c($, { key: 1 }, [
            L(R(r(s).getOptionLabel(m)), 1)
          ], 64)) : (n(), c($, { key: 2 }, [
            L(R(m.label), 1)
          ], 64))
        ]),
        _: 2
      }, 1032, ["menu", "index", "is-focused", "is-selected", "is-disabled", "class", "onSelect"]))), 128)),
      !r(s).isTaggable && r(l).availableOptions.value.length === 0 ? (n(), c("div", {
        key: 0,
        class: w(["no-results", r(s).classes?.noResults])
      }, [
        i.slots["no-options"] ? (n(), b(_(i.slots["no-options"]), { key: 0 })) : (n(), c($, { key: 1 }, [
          L(" No results found ")
        ], 64))
      ], 2)) : I("", !0),
      r(s).isTaggable && r(l).search.value ? (n(), c("div", {
        key: 1,
        class: w(["taggable-no-options", r(s).classes?.taggableNoOptions]),
        onClick: u[0] || (u[0] = //@ts-ignore
        (...m) => r(l).createOption && r(l).createOption(...m))
      }, [
        i.slots["taggable-no-options"] ? (n(), b(_(i.slots["taggable-no-options"]), {
          key: 0,
          option: r(l).search.value
        }, null, 8, ["option"])) : (n(), c($, { key: 1 }, [
          L(" Press enter to add " + R(r(l).search.value) + " option ", 1)
        ], 64))
      ], 2)) : I("", !0)
    ], 14, Le));
  }
}), Ae = /* @__PURE__ */ S(Re, [["__scopeId", "data-v-5c36e7d3"]]), xe = ["aria-label"], Te = /* @__PURE__ */ A({
  __name: "MultiValue",
  props: {
    label: {},
    classes: {}
  },
  emits: ["remove"],
  setup(p, { emit: i }) {
    const e = p, s = i;
    return (l, o) => (n(), c("div", {
      class: w(["multi-value", e.classes?.multiValue])
    }, [
      C("div", {
        class: w(["multi-value-label", e.classes?.multiValueLabel])
      }, R(e.label), 3),
      C("button", {
        type: "button",
        class: w(["multi-value-remove", e.classes?.multiValueRemove]),
        "aria-label": `Remove ${e.label}`,
        onClick: o[0] || (o[0] = N((h) => s("remove"), ["stop"]))
      }, [
        j(Y)
      ], 10, xe)
    ], 2));
  }
}), Ee = /* @__PURE__ */ S(Te, [["__scopeId", "data-v-dfb6ab09"]]), Ne = { class: "input-placeholder" }, Pe = /* @__PURE__ */ A({
  __name: "Placeholder",
  props: {
    text: {},
    placeholderSlot: { type: Function }
  },
  setup(p) {
    return (i, e) => (n(), c("div", Ne, [
      i.placeholderSlot ? (n(), b(_(i.placeholderSlot), { key: 0 })) : (n(), c($, { key: 1 }, [
        L(R(i.text), 1)
      ], 64))
    ]));
  }
}), Fe = /* @__PURE__ */ S(Pe, [["__scopeId", "data-v-d650edcf"]]), qe = ["data-state"], Ke = ["id", "aria-expanded", "aria-describedby", "aria-description", "aria-labelledby", "aria-label", "aria-required", "aria-owns", "aria-controls"], Ue = ["data-value"], We = ["id", "aria-labelledby", "disabled"], ze = /* @__PURE__ */ A({
  __name: "Select",
  props: /* @__PURE__ */ F({
    options: {},
    displayedOptions: {},
    placeholder: { default: "Select an option" },
    isClearable: { type: Boolean, default: !0 },
    isDisabled: { type: Boolean, default: !1 },
    isSearchable: { type: Boolean, default: !0 },
    isMulti: { type: Boolean, default: !1 },
    isTaggable: { type: Boolean, default: !1 },
    isLoading: { type: Boolean, default: !1 },
    isMenuOpen: { type: Boolean, default: void 0 },
    hideSelectedOptions: { type: Boolean, default: !0 },
    shouldAutofocusOption: { type: Boolean, default: !0 },
    closeOnSelect: { type: Boolean, default: !0 },
    teleport: { default: void 0 },
    inputId: { default: void 0 },
    classes: { default: void 0 },
    uid: { default: Se() },
    aria: { default: void 0 },
    disableInvalidVModelWarn: { type: Boolean, default: !1 },
    filterBy: { type: Function, default: (p, i, e) => i.toLowerCase().includes(e.toLowerCase()) },
    getOptionValue: { type: Function, default: (p) => p.value },
    getOptionLabel: { type: Function, default: (p) => p.label }
  }, {
    modelValue: { required: !0 },
    modelModifiers: {}
  }),
  emits: /* @__PURE__ */ F(["optionSelected", "optionDeselected", "optionCreated", "menuOpened", "menuClosed", "search"], ["update:modelValue"]),
  setup(p, { emit: i }) {
    const e = p, s = i, l = ie(), o = H(p, "modelValue"), h = D("container"), O = D("input"), y = D("indicators"), a = T(""), u = T(!1), m = T(-1), f = W(() => {
      const t = e.displayedOptions || e.options;
      t?.length || console.warn("[vue3-select-component warn]: No options or displayedOptions were provided to the component.");
      const d = t.map((B) => ({
        ...B,
        label: e.getOptionLabel(B),
        value: e.getOptionValue(B)
      })), v = (B) => B.filter(
        (x) => e.hideSelectedOptions && Array.isArray(o.value) ? !o.value.includes(x.value) : !0
      );
      if (e.isSearchable && a.value) {
        const B = d.filter((x) => e.filterBy(x, e.getOptionLabel(x), a.value));
        return e.isMulti ? v(B) : B;
      }
      return e.isMulti ? v(d) : d;
    }), g = W(() => {
      if (e.isMulti)
        return Array.isArray(o.value) ? o.value.map((d) => e.options.find((v) => e.getOptionValue(v) === d)).filter((d) => d !== void 0) : (e.disableInvalidVModelWarn || console.warn(`[vue3-select-component warn]: The v-model provided should be an array when using \`isMulti\` prop, instead it was: ${o.value}`), []);
      const t = e.options.find((d) => e.getOptionValue(d) === o.value);
      return t ? [t] : [];
    });
    function k() {
      e.isDisabled || (u.value = !0, e.shouldAutofocusOption && (m.value = e.options.findIndex((t) => !t.disabled)), O.value && O.value.focus(), s("menuOpened"));
    }
    function M() {
      u.value = !1, a.value = "", s("search", ""), s("menuClosed");
    }
    function V() {
      u.value ? M() : k();
    }
    function K(t) {
      y.value?.containerRef && !y.value.containerRef.contains(t.target) && k();
    }
    const G = (t) => {
      t.disabled || (e.isMulti ? Array.isArray(o.value) ? o.value.find((v) => v === t.value) ? o.value = o.value.filter((v) => v !== t.value) : o.value = [...o.value, t.value] : (o.value = [t.value], e.disableInvalidVModelWarn || console.warn(`[vue3-select-component warn]: The v-model provided should be an array when using \`isMulti\` prop, instead it was: ${o.value}. Since an option has been selected, the component automatically converted the v-model to an array.`)) : o.value = t.value, s("optionSelected", t), a.value = "", e.closeOnSelect && M(), O.value && O.value.blur());
    }, E = (t) => {
      e.isMulti && !e.isDisabled && (Array.isArray(o.value) ? (o.value = o.value.filter((d) => d !== t.value), s("optionDeselected", t)) : e.disableInvalidVModelWarn || console.warn(`[vue3-select-component warn]: The v-model provided should be an array when using \`isMulti\` prop, instead it was: ${o.value}`));
    }, J = () => {
      e.isMulti ? (o.value = [], s("optionDeselected", null)) : (o.value = void 0, s("optionDeselected", g.value[0])), u.value && M(), O.value && O.value.blur();
    }, Q = () => {
      s("optionCreated", a.value), a.value = "", M();
    }, ee = (t) => {
      t.key === "Tab" ? M() : t.code === "Space" && !u.value && a.value.length === 0 && (t.preventDefault(), t.stopImmediatePropagation(), k());
    };
    return z(Z, e), z(X, {
      vmodel: o,
      availableOptions: f,
      selectedOptions: g,
      menuOpen: u,
      focusedOption: m,
      containerRef: h,
      search: a,
      openMenu: k,
      closeMenu: M,
      toggleMenu: V,
      handleControlClick: K,
      setOption: G,
      removeOption: E,
      createOption: Q
    }), P(
      () => a.value,
      () => {
        a.value && (s("search", a.value), u.value || k());
      }
    ), P(
      () => e.isMenuOpen,
      (t, d) => {
        d === void 0 && t === void 0 || (t ? k() : M());
      },
      { immediate: !0 }
    ), (t, d) => (n(), c("div", {
      ref: "container",
      dir: "auto",
      class: w(["vue-select", [{ open: u.value, typing: u.value && a.value.length > 0, disabled: t.isDisabled }, e.classes?.container]]),
      "data-state": u.value ? "open" : "closed"
    }, [
      C("div", {
        class: w(["control", [{ focused: u.value, disabled: e.isDisabled }, e.classes?.control]]),
        onClick: d[3] || (d[3] = (v) => K(v))
      }, [
        C("div", {
          id: `vue-select-${t.uid}-combobox`,
          class: w(["value-container", [{ multi: t.isMulti, "has-value": g.value.length > 0 }, e.classes?.valueContainer]]),
          role: "combobox",
          "aria-expanded": u.value,
          "aria-describedby": t.placeholder,
          "aria-description": t.placeholder,
          "aria-labelledby": t.aria?.labelledby,
          "aria-label": g.value.length ? g.value.map(t.getOptionLabel).join(", ") : "",
          "aria-required": t.aria?.required,
          "aria-owns": `vue-select-${t.uid}-listbox`,
          "aria-controls": `vue-select-${t.uid}-listbox`,
          "aria-haspopup": "true"
        }, [
          !g.value[0] && !a.value.length ? (n(), b(Fe, {
            key: 0,
            text: t.placeholder,
            "placeholder-slot": l.placeholder,
            class: w(e.classes?.placeholder)
          }, null, 8, ["text", "placeholder-slot", "class"])) : !e.isMulti && g.value[0] ? (n(), c("div", {
            key: 1,
            class: w(["single-value", [e.classes?.singleValue]]),
            onClick: d[0] || (d[0] = (v) => k())
          }, [
            l.value ? (n(), b(_(l.value), {
              key: 0,
              option: g.value[0]
            }, null, 8, ["option"])) : (n(), c($, { key: 1 }, [
              L(R(t.getOptionLabel(g.value[0])), 1)
            ], 64))
          ], 2)) : e.isMulti && g.value.length ? (n(!0), c($, { key: 2 }, q(g.value, (v) => (n(), c($, {
            key: v.value
          }, [
            l.tag ? (n(), b(_(l.tag), {
              key: 0,
              option: v,
              "remove-option": () => E(v)
            }, null, 8, ["option", "remove-option"])) : (n(), b(Ee, {
              key: 1,
              label: t.getOptionLabel(v),
              classes: {
                multiValue: e.classes?.multiValue,
                multiValueLabel: e.classes?.multiValueLabel,
                multiValueRemove: e.classes?.multiValueRemove
              },
              onRemove: (B) => E(v)
            }, null, 8, ["label", "classes", "onRemove"]))
          ], 64))), 128)) : I("", !0),
          C("div", {
            class: w(["input-container", [{ typing: u.value && a.value.length > 0 }, e.classes?.inputContainer]]),
            "data-value": a.value
          }, [
            ue(C("input", {
              id: t.inputId,
              ref: "input",
              "onUpdate:modelValue": d[1] || (d[1] = (v) => a.value = v),
              class: w(["search-input", e.classes?.searchInput]),
              autocapitalize: "none",
              autocomplete: "off",
              autocorrect: "off",
              spellcheck: "false",
              tabindex: "0",
              type: "text",
              "aria-autocomplete": "list",
              "aria-labelledby": `vue-select-${t.uid}-combobox`,
              disabled: t.isDisabled,
              placeholder: "",
              onMousedown: d[2] || (d[2] = (v) => k()),
              onKeydown: ee
            }, null, 42, We), [
              [de, a.value]
            ])
          ], 10, Ue)
        ], 10, Ke),
        j(Be, {
          ref: "indicators",
          "has-selected-option": g.value.length > 0,
          "is-menu-open": u.value,
          "is-clearable": t.isClearable,
          "is-loading": t.isLoading,
          "is-disabled": t.isDisabled,
          slots: { clear: l.clear, dropdown: l.dropdown, loading: l.loading },
          onClear: J,
          onToggle: V
        }, null, 8, ["has-selected-option", "is-menu-open", "is-clearable", "is-loading", "is-disabled", "slots"])
      ], 2),
      (n(), b(re, {
        to: t.teleport,
        disabled: !t.teleport,
        defer: !0
      }, [
        u.value ? (n(), b(Ae, {
          key: 0,
          modelValue: o.value,
          "onUpdate:modelValue": d[4] || (d[4] = (v) => o.value = v),
          slots: {
            option: l.option,
            "menu-header": l["menu-header"],
            "no-options": l["no-options"],
            "taggable-no-options": l["taggable-no-options"]
          }
        }, null, 8, ["modelValue", "slots"])) : I("", !0)
      ], 8, ["to", "disabled"]))
    ], 10, qe));
  }
}), je = /* @__PURE__ */ S(ze, [["__scopeId", "data-v-c5806535"]]);
export {
  je as default
};
