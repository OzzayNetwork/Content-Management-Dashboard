import {
  Fragment,
  Teleport,
  computed,
  createBaseVNode,
  createBlock,
  createCommentVNode,
  createElementBlock,
  createTextVNode,
  createVNode,
  defineComponent,
  inject,
  mergeModels,
  normalizeClass,
  normalizeStyle,
  onBeforeUnmount,
  onMounted,
  openBlock,
  provide,
  ref,
  renderList,
  renderSlot,
  resolveDynamicComponent,
  toDisplayString,
  unref,
  useModel,
  useSlots,
  useTemplateRef,
  vModelText,
  watch,
  withCtx,
  withDirectives,
  withKeys,
  withModifiers
} from "./chunk-FIAHBV72.js";
import "./chunk-5WRI5ZAA.js";

// node_modules/vue3-select-component/dist/index.es.js
(function() {
  "use strict";
  try {
    if (typeof document < "u") {
      var o = document.createElement("style");
      o.appendChild(document.createTextNode('@keyframes spinner-circle-animation-ed866313{0%,39%,to{opacity:0}40%{opacity:1}}.spinner[data-v-ed866313]{position:relative;width:var(--vs-spinner-size);height:var(--vs-spinner-size);margin:0;padding:0}.spinner-circle[data-v-ed866313]{width:100%;height:100%;position:absolute;left:0;top:0}.spinner-circle[data-v-ed866313]:before{content:"";display:block;margin:0 auto;width:15%;height:15%;background-color:var(--vs-spinner-color);border-radius:100%;-webkit-animation:spinner-circle-animation-ed866313 1.2s infinite ease-in-out both;animation:spinner-circle-animation-ed866313 1.2s infinite ease-in-out both}.spinner-circle[data-v-ed866313]:nth-child(2){transform:rotate(30deg)}.spinner-circle[data-v-ed866313]:nth-child(3){transform:rotate(60deg)}.spinner-circle[data-v-ed866313]:nth-child(4){transform:rotate(90deg)}.spinner-circle[data-v-ed866313]:nth-child(5){transform:rotate(120deg)}.spinner-circle[data-v-ed866313]:nth-child(6){transform:rotate(150deg)}.spinner-circle[data-v-ed866313]:nth-child(7){transform:rotate(180deg)}.spinner-circle[data-v-ed866313]:nth-child(8){transform:rotate(210deg)}.spinner-circle[data-v-ed866313]:nth-child(9){transform:rotate(240deg)}.spinner-circle[data-v-ed866313]:nth-child(10){transform:rotate(270deg)}.spinner-circle[data-v-ed866313]:nth-child(11){transform:rotate(300deg)}.spinner-circle[data-v-ed866313]:nth-child(12){transform:rotate(330deg)}.spinner-circle[data-v-ed866313]:nth-child(2):before{animation-delay:-1.1s}.spinner-circle[data-v-ed866313]:nth-child(3):before{animation-delay:-1s}.spinner-circle[data-v-ed866313]:nth-child(4):before{animation-delay:-.9s}.spinner-circle[data-v-ed866313]:nth-child(5):before{animation-delay:-.8s}.spinner-circle[data-v-ed866313]:nth-child(6):before{animation-delay:-.7s}.spinner-circle[data-v-ed866313]:nth-child(7):before{animation-delay:-.6s}.spinner-circle[data-v-ed866313]:nth-child(8):before{animation-delay:-.5s}.spinner-circle[data-v-ed866313]:nth-child(9):before{animation-delay:-.4s}.spinner-circle[data-v-ed866313]:nth-child(10):before{animation-delay:-.3s}.spinner-circle[data-v-ed866313]:nth-child(11):before{animation-delay:-.2s}.spinner-circle[data-v-ed866313]:nth-child(12):before{animation-delay:-.1s}.indicators-container[data-v-f0250ade]{display:flex;align-items:center;align-self:stretch;flex-shrink:0;gap:var(--vs-indicators-gap);padding:var(--vs-padding)}.clear-button[data-v-f0250ade]{appearance:none;display:inline-block;padding:0;margin:0;border:0;width:var(--vs-indicator-icon-size);height:var(--vs-indicator-icon-size);color:var(--vs-indicator-icon-color);background:none;outline:none;cursor:var(--vs-indicator-icon-cursor)}.dropdown-icon[data-v-f0250ade]{appearance:none;display:inline-block;padding:0;margin:0;border:0;width:var(--vs-indicator-icon-size);height:var(--vs-indicator-icon-size);color:var(--vs-indicator-icon-color);background:none;outline:none;cursor:var(--vs-indicator-icon-cursor);transition:var(--vs-indicator-dropdown-icon-transition)}.dropdown-icon.active[data-v-f0250ade]{transform:rotate(180deg)}[data-v-4c5f8027]{box-sizing:border-box}.menu-option[data-v-4c5f8027]{display:flex;width:var(--vs-option-width);border:0;margin:0;padding:var(--vs-option-padding);font-size:var(--vs-option-font-size);font-weight:var(--vs-option-font-weight);font-family:var(--vs-font-family);color:var(--vs-option-text-color);white-space:break-spaces;background-color:var(--vs-option-background-color);text-align:var(--vs-option-text-align);cursor:var(--vs-option-cursor)}.menu-option[data-v-4c5f8027]:hover{background-color:var(--vs-option-hover-background-color);color:var(--vs-option-hover-text-color)}.menu-option.focused[data-v-4c5f8027]{background-color:var(--vs-option-focused-background-color);color:var(--vs-option-focused-text-color)}.menu-option.selected[data-v-4c5f8027]{background-color:var(--vs-option-selected-background-color);color:var(--vs-option-selected-text-color)}.menu-option.disabled[data-v-4c5f8027]{background-color:var(--vs-option-disabled-background-color);color:var(--vs-option-disabled-text-color)}[data-v-5c36e7d3]{box-sizing:border-box}.menu[data-v-5c36e7d3]{position:absolute;margin-top:var(--vs-menu-offset-top);max-height:var(--vs-menu-height);overflow-y:auto;border:var(--vs-menu-border);border-radius:var(--vs-border-radius);box-shadow:var(--vs-menu-box-shadow);background-color:var(--vs-menu-background-color);z-index:var(--vs-menu-z-index)}.no-results[data-v-5c36e7d3]{padding:var(--vs-option-padding);font-size:var(--vs-font-size);font-family:var(--vs-font-family);color:var(--vs-text-color)}.taggable-no-options[data-v-5c36e7d3]{padding:var(--vs-option-padding);font-size:var(--vs-font-size);font-family:var(--vs-font-family);color:var(--vs-text-color);cursor:pointer}.multi-value[data-v-dfb6ab09]{display:flex;min-width:0px;margin:var(--vs-multi-value-margin);border-radius:var(--vs-multi-value-border-radius);background:var(--vs-multi-value-background-color)}.multi-value-label[data-v-dfb6ab09]{padding:var(--vs-multi-value-label-padding);border:var(--vs-multi-value-border);border-radius:var(--vs-multi-value-border-radius);overflow:hidden;text-overflow:ellipsis;white-space:nowrap;font-size:var(--vs-multi-value-label-font-size);font-weight:var(--vs-multi-value-label-font-weight);line-height:var(--vs-multi-value-label-line-height);color:var(--vs-multi-value-label-text-color)}.multi-value-remove[data-v-dfb6ab09]{border-radius:var(--vs-multi-value-border-radius);appearance:none;display:flex;align-items:center;padding:var(--vs-multi-value-delete-padding);border:none;outline:none;cursor:var(--vs-multi-value-xmark-cursor);background-color:var(--vs-multi-value-background-color)}.multi-value-remove[data-v-dfb6ab09]:hover{background-color:var(--vs-multi-value-delete-hover-background-color)}.multi-value-remove svg[data-v-dfb6ab09]{width:var(--vs-multi-value-xmark-size);height:var(--vs-multi-value-xmark-size);fill:var(--vs-multi-value-xmark-color)}.multi-value-remove:hover svg[data-v-dfb6ab09]{fill:var(--vs-multi-value-xmark-hover-color)}.input-placeholder[data-v-d650edcf]{grid-area:1 / 1 / 2 / 3;color:var(--vs-placeholder-color)}:root{--vs-width: 100%;--vs-min-height: 38px;--vs-padding: 4px 8px;--vs-border: 1px solid #e4e4e7;--vs-border-radius: 4px;--vs-font-size: 16px;--vs-font-weight: 400;--vs-font-family: inherit;--vs-text-color: #18181b;--vs-line-height: 1.5;--vs-placeholder-color: #52525b;--vs-background-color: #fff;--vs-disabled-background-color: #f4f4f5;--vs-outline-width: 1px;--vs-outline-color: #3b82f6;--vs-menu-offset-top: 8px;--vs-menu-height: 200px;--vs-menu-border: var(--vs-border);--vs-menu-background-color: var(--vs-background-color);--vs-menu-box-shadow: 0 1px 2px 0 rgb(0 0 0 / .05);--vs-menu-z-index: 2;--vs-option-width: 100%;--vs-option-padding: 8px 12px;--vs-option-cursor: pointer;--vs-option-font-size: var(--vs-font-size);--vs-option-font-weight: var(--vs-font-weight);--vs-option-text-align: -webkit-auto;--vs-option-text-color: var(--vs-text-color);--vs-option-hover-text-color: var(--vs-text-color);--vs-option-focused-text-color: var(--vs-text-color);--vs-option-selected-text-color: var(--vs-text-color);--vs-option-disabled-text-color: #52525b;--vs-option-background-color: var(--vs-menu-background);--vs-option-hover-background-color: #dbeafe;--vs-option-focused-background-color: var(--vs-option-hover-background-color);--vs-option-selected-background-color: #93c5fd;--vs-option-disabled-background-color: #f4f4f5;--vs-option-opacity-menu-open: .4;--vs-multi-value-margin: 2px;--vs-multi-value-border: 0px;--vs-multi-value-border-radius: 2px;--vs-multi-value-background-color: #f4f4f5;--vs-multi-value-label-padding: 4px 4px 4px 8px;--vs-multi-value-label-font-size: 12px;--vs-multi-value-label-font-weight: 400;--vs-multi-value-label-line-height: 1;--vs-multi-value-label-text-color: #3f3f46;--vs-multi-value-delete-padding: 0 3px;--vs-multi-value-delete-hover-background-color: #FF6467;--vs-multi-value-xmark-size: 16px;--vs-multi-value-xmark-cursor: pointer;--vs-multi-value-xmark-color: var(--vs-multi-value-label-text-color);--vs-multi-value-xmark-hover-color: #fff;--vs-indicators-gap: 0px;--vs-indicator-icon-size: 20px;--vs-indicator-icon-color: var(--vs-text-color);--vs-indicator-icon-cursor: pointer;--vs-indicator-dropdown-icon-transition: transform .2s ease-out;--vs-spinner-color: var(--vs-text-color);--vs-spinner-size: 16px}[data-v-c5806535]{box-sizing:border-box}.vue-select[data-v-c5806535]{position:relative;box-sizing:border-box;width:var(--vs-width)}.control[data-v-c5806535]{display:flex;flex-wrap:wrap;align-items:center;justify-content:space-between;min-height:var(--vs-min-height);border:var(--vs-border);border-radius:var(--vs-border-radius);background-color:var(--vs-background-color)}.control.focused[data-v-c5806535]{box-shadow:0 0 0 var(--vs-outline-width) var(--vs-outline-color);border-color:var(--vs-outline-color)}.control.disabled[data-v-c5806535]{background-color:var(--vs-disabled-background-color)}.value-container[data-v-c5806535]{position:relative;overflow:hidden;display:grid;align-items:center;flex:1 1 0%;padding:var(--vs-padding)}.value-container.multi.has-value[data-v-c5806535]{display:flex;flex-wrap:wrap}.single-value[data-v-c5806535]{display:block;grid-area:1 / 1 / 2 / 3;max-width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;font-size:var(--vs-font-size);font-weight:var(--vs-font-weight);font-family:var(--vs-font-family);line-height:var(--vs-line-height);color:var(--vs-text-color)}.vue-select[data-state=open] .single-value[data-v-c5806535]{opacity:var(--vs-option-opacity-menu-open)}.vue-select.typing .single-value[data-v-c5806535]{opacity:0}.input-container[data-v-c5806535]{visibility:visible;display:inline-grid;grid-area:1 / 1 / 2 / 3;grid-template-columns:0px min-content}.input-container.typing[data-v-c5806535]{transform:translateZ(0)}.input-container.typing[data-v-c5806535]:after{content:attr(data-value) " ";visibility:hidden;white-space:pre;grid-area:1 / 2;min-width:2px;padding:0;margin:0;border:0}.search-input[data-v-c5806535]{margin:0;padding:0;border:0;min-width:2px;width:100%;grid-area:1 / 2;background:0px center;font-size:var(--vs-font-size);font-family:var(--vs-font-family);line-height:var(--vs-line-height);color:var(--vs-text-color);opacity:1;outline:none}')), document.head.appendChild(o);
    }
  } catch (e) {
    console.error("vite-plugin-css-injected-by-js", e);
  }
})();
var S = (p, i) => {
  const e = p.__vccOpts || p;
  for (const [s, l] of i)
    e[s] = l;
  return e;
};
var ce = {};
var pe = {
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 20 20",
  fill: "currentColor"
};
function ve(p, i) {
  return openBlock(), createElementBlock("svg", pe, i[0] || (i[0] = [
    createBaseVNode("path", {
      "fill-rule": "evenodd",
      d: "M5.22 8.22a.75.75 0 0 1 1.06 0L10 11.94l3.72-3.72a.75.75 0 1 1 1.06 1.06l-4.25 4.25a.75.75 0 0 1-1.06 0L5.22 9.28a.75.75 0 0 1 0-1.06Z",
      "clip-rule": "evenodd"
    }, null, -1)
  ]));
}
var fe = S(ce, [["render", ve]]);
var me = {};
var be = {
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 20 20",
  fill: "currentColor"
};
function ye(p, i) {
  return openBlock(), createElementBlock("svg", be, i[0] || (i[0] = [
    createBaseVNode("path", { d: "M6.28 5.22a.75.75 0 0 0-1.06 1.06L8.94 10l-3.72 3.72a.75.75 0 1 0 1.06 1.06L10 11.06l3.72 3.72a.75.75 0 1 0 1.06-1.06L11.06 10l3.72-3.72a.75.75 0 0 0-1.06-1.06L10 8.94 6.28 5.22Z" }, null, -1)
  ]));
}
var Y = S(me, [["render", ye]]);
var ge = {};
var he = { className: "spinner" };
function Oe(p, i) {
  return openBlock(), createElementBlock("div", he, [
    (openBlock(), createElementBlock(Fragment, null, renderList(12, (e) => createBaseVNode("div", {
      key: e,
      class: "spinner-circle"
    })), 64))
  ]);
}
var ke = S(ge, [["render", Oe], ["__scopeId", "data-v-ed866313"]]);
var we = {
  ref: "container",
  class: "indicators-container"
};
var Me = ["disabled"];
var $e = ["disabled"];
var _e = defineComponent({
  __name: "Indicators",
  props: {
    hasSelectedOption: { type: Boolean },
    isMenuOpen: { type: Boolean },
    isClearable: { type: Boolean },
    isLoading: { type: Boolean },
    isDisabled: { type: Boolean },
    slots: {}
  },
  emits: ["clear", "toggle"],
  setup(p, { expose: i, emit: e }) {
    const s = p, l = e, o = useTemplateRef("container"), h = useTemplateRef("clearButton"), O = useTemplateRef("dropdownButton");
    return i({ containerRef: o, clearButtonRef: h, dropdownButtonRef: O }), (y, a) => (openBlock(), createElementBlock("div", we, [
      y.hasSelectedOption && y.isClearable && !y.isLoading ? (openBlock(), createElementBlock("button", {
        key: 0,
        ref: "clearButton",
        type: "button",
        class: "clear-button",
        tabindex: "-1",
        disabled: y.isDisabled,
        onClick: a[0] || (a[0] = withModifiers((u) => l("clear"), ["stop"]))
      }, [
        s.slots.clear ? (openBlock(), createBlock(resolveDynamicComponent(s.slots.clear), { key: 0 })) : (openBlock(), createBlock(Y, { key: 1 }))
      ], 8, Me)) : createCommentVNode("", true),
      y.isLoading ? createCommentVNode("", true) : (openBlock(), createElementBlock("button", {
        key: 1,
        ref: "dropdownButton",
        type: "button",
        class: normalizeClass(["dropdown-icon", { active: y.isMenuOpen }]),
        tabindex: "-1",
        disabled: y.isDisabled,
        onClick: a[1] || (a[1] = withModifiers((u) => l("toggle"), ["stop"]))
      }, [
        s.slots.dropdown ? (openBlock(), createBlock(resolveDynamicComponent(s.slots.dropdown), { key: 0 })) : (openBlock(), createBlock(fe, { key: 1 }))
      ], 10, $e)),
      s.slots.loading ? (openBlock(), createBlock(resolveDynamicComponent(s.slots.loading), { key: 2 })) : (openBlock(), createElementBlock(Fragment, { key: 3 }, [
        y.isLoading ? (openBlock(), createBlock(ke, { key: 0 })) : createCommentVNode("", true)
      ], 64))
    ], 512));
  }
});
var Be = S(_e, [["__scopeId", "data-v-f0250ade"]]);
var Z = Symbol("props");
var X = Symbol("data");
var Ce = 0;
function Se() {
  return ++Ce;
}
var Ve = ["aria-disabled", "aria-selected"];
var De = defineComponent({
  __name: "MenuOption",
  props: {
    menu: {},
    index: {},
    isFocused: { type: Boolean },
    isSelected: { type: Boolean },
    isDisabled: { type: Boolean }
  },
  emits: ["select"],
  setup(p, { emit: i }) {
    const e = p, s = i, l = ref(null);
    return watch(
      () => e.isFocused,
      () => {
        if (e.isFocused && e.menu) {
          const o = e.menu.children[e.index], h = o.offsetTop, O = h + o.clientHeight, y = e.menu.scrollTop, a = e.menu.clientHeight;
          h < y ? e.menu.scrollTop = h : O > y + a && (e.menu.scrollTop = O - a);
        }
      }
    ), (o, h) => (openBlock(), createElementBlock("div", {
      ref_key: "option",
      ref: l,
      class: normalizeClass(["menu-option", { focused: o.isFocused, selected: o.isSelected, disabled: o.isDisabled }]),
      tabindex: "-1",
      role: "option",
      "aria-disabled": o.isDisabled,
      "aria-selected": o.isSelected,
      onClick: h[0] || (h[0] = (O) => s("select")),
      onKeydown: h[1] || (h[1] = withKeys((O) => s("select"), ["enter"]))
    }, [
      renderSlot(o.$slots, "default", {}, void 0, true)
    ], 42, Ve));
  }
});
var Ie = S(De, [["__scopeId", "data-v-4c5f8027"]]);
var Le = ["id", "aria-label", "aria-multiselectable"];
var Re = defineComponent({
  __name: "Menu",
  props: mergeModels({
    slots: {}
  }, {
    modelValue: { required: true },
    modelModifiers: {}
  }),
  emits: ["update:modelValue"],
  setup(p) {
    const i = p, e = useModel(p, "modelValue"), s = inject(Z), l = inject(X), o = useTemplateRef("menu"), h = () => {
      if (l.containerRef.value) {
        const a = l.containerRef.value.getBoundingClientRect();
        return {
          left: `${a.x}px`,
          top: `${a.y + a.height}px`
        };
      }
      return console.warn("Unable to calculate dynamic menu position because of missing internal DOM reference."), { top: "0px", left: "0px" };
    }, O = (a) => {
      if (l.menuOpen.value) {
        const u = l.focusedOption.value;
        if (a.key === "ArrowDown") {
          a.preventDefault();
          const f = l.availableOptions.value.findIndex((k, M) => !k.disabled && M > u), g = l.availableOptions.value.findIndex((k) => !k.disabled);
          l.focusedOption.value = f === -1 ? g : f;
        }
        if (a.key === "ArrowUp") {
          a.preventDefault();
          const f = l.availableOptions.value.reduce(
            (k, M, V) => !M.disabled && V < u ? V : k,
            -1
          ), g = l.availableOptions.value.reduce(
            (k, M, V) => M.disabled ? k : V,
            -1
          );
          l.focusedOption.value = f === -1 ? g : f;
        }
        if (a.key === "Enter") {
          const f = l.availableOptions.value[u];
          a.preventDefault(), f ? l.setOption(f) : s.isTaggable && l.search.value && l.createOption();
        }
        if (a.code === "Space" && l.search.value.length === 0) {
          const f = l.availableOptions.value[u];
          a.preventDefault(), f && l.setOption(f);
        }
        a.key === "Escape" && (a.preventDefault(), l.closeMenu());
        const m = s.isMulti && Array.isArray(e.value) ? e.value.length > 0 : !!e.value;
        a.key === "Backspace" && l.search.value.length === 0 && m && (a.preventDefault(), s.isMulti && Array.isArray(e.value) ? e.value = e.value.slice(0, -1) : e.value = void 0);
      }
    }, y = (a) => {
      const u = a.target, m = l.containerRef.value && l.containerRef.value.contains(u), f = o.value && o.value.contains(u);
      !m && !f && l.closeMenu();
    };
    return onMounted(() => {
      document.addEventListener("keydown", O), document.addEventListener("click", y);
    }), onBeforeUnmount(() => {
      document.removeEventListener("keydown", O), document.removeEventListener("click", y);
    }), (a, u) => {
      var _a, _b, _c, _d, _e2, _f;
      return openBlock(), createElementBlock("div", {
        id: `vue-select-${unref(s).uid}-listbox`,
        ref: "menu",
        class: normalizeClass(["menu", (_a = unref(s).classes) == null ? void 0 : _a.menuContainer]),
        role: "listbox",
        "aria-label": (_b = unref(s).aria) == null ? void 0 : _b.labelledby,
        "aria-multiselectable": unref(s).isMulti,
        style: normalizeStyle({
          width: unref(s).teleport ? `${(_d = (_c = unref(l).containerRef) == null ? void 0 : _c.value) == null ? void 0 : _d.getBoundingClientRect().width}px` : "100%",
          top: unref(s).teleport ? h().top : "unset",
          left: unref(s).teleport ? h().left : "unset"
        })
      }, [
        (openBlock(true), createElementBlock(Fragment, null, renderList(unref(l).availableOptions.value, (m, f) => {
          var _a2;
          return openBlock(), createBlock(Ie, {
            key: f,
            type: "button",
            menu: o.value,
            index: f,
            "is-focused": unref(l).focusedOption.value === f,
            "is-selected": Array.isArray(e.value) ? e.value.includes(m.value) : m.value === e.value,
            "is-disabled": m.disabled || false,
            class: normalizeClass((_a2 = unref(s).classes) == null ? void 0 : _a2.menuOption),
            onSelect: (g) => unref(l).setOption(m)
          }, {
            default: withCtx(() => [
              (openBlock(), createBlock(resolveDynamicComponent(i.slots["menu-header"]))),
              i.slots.option ? (openBlock(), createBlock(resolveDynamicComponent(i.slots.option), {
                key: 0,
                option: m,
                index: f,
                "is-focused": unref(l).focusedOption.value === f,
                "is-selected": Array.isArray(e.value) ? e.value.includes(m.value) : m.value === e.value,
                "is-disabled": m.disabled || false
              }, null, 8, ["option", "index", "is-focused", "is-selected", "is-disabled"])) : unref(s).getOptionLabel ? (openBlock(), createElementBlock(Fragment, { key: 1 }, [
                createTextVNode(toDisplayString(unref(s).getOptionLabel(m)), 1)
              ], 64)) : (openBlock(), createElementBlock(Fragment, { key: 2 }, [
                createTextVNode(toDisplayString(m.label), 1)
              ], 64))
            ]),
            _: 2
          }, 1032, ["menu", "index", "is-focused", "is-selected", "is-disabled", "class", "onSelect"]);
        }), 128)),
        !unref(s).isTaggable && unref(l).availableOptions.value.length === 0 ? (openBlock(), createElementBlock("div", {
          key: 0,
          class: normalizeClass(["no-results", (_e2 = unref(s).classes) == null ? void 0 : _e2.noResults])
        }, [
          i.slots["no-options"] ? (openBlock(), createBlock(resolveDynamicComponent(i.slots["no-options"]), { key: 0 })) : (openBlock(), createElementBlock(Fragment, { key: 1 }, [
            createTextVNode(" No results found ")
          ], 64))
        ], 2)) : createCommentVNode("", true),
        unref(s).isTaggable && unref(l).search.value ? (openBlock(), createElementBlock("div", {
          key: 1,
          class: normalizeClass(["taggable-no-options", (_f = unref(s).classes) == null ? void 0 : _f.taggableNoOptions]),
          onClick: u[0] || (u[0] = //@ts-ignore
          (...m) => unref(l).createOption && unref(l).createOption(...m))
        }, [
          i.slots["taggable-no-options"] ? (openBlock(), createBlock(resolveDynamicComponent(i.slots["taggable-no-options"]), {
            key: 0,
            option: unref(l).search.value
          }, null, 8, ["option"])) : (openBlock(), createElementBlock(Fragment, { key: 1 }, [
            createTextVNode(" Press enter to add " + toDisplayString(unref(l).search.value) + " option ", 1)
          ], 64))
        ], 2)) : createCommentVNode("", true)
      ], 14, Le);
    };
  }
});
var Ae = S(Re, [["__scopeId", "data-v-5c36e7d3"]]);
var xe = ["aria-label"];
var Te = defineComponent({
  __name: "MultiValue",
  props: {
    label: {},
    classes: {}
  },
  emits: ["remove"],
  setup(p, { emit: i }) {
    const e = p, s = i;
    return (l, o) => {
      var _a, _b, _c;
      return openBlock(), createElementBlock("div", {
        class: normalizeClass(["multi-value", (_a = e.classes) == null ? void 0 : _a.multiValue])
      }, [
        createBaseVNode("div", {
          class: normalizeClass(["multi-value-label", (_b = e.classes) == null ? void 0 : _b.multiValueLabel])
        }, toDisplayString(e.label), 3),
        createBaseVNode("button", {
          type: "button",
          class: normalizeClass(["multi-value-remove", (_c = e.classes) == null ? void 0 : _c.multiValueRemove]),
          "aria-label": `Remove ${e.label}`,
          onClick: o[0] || (o[0] = withModifiers((h) => s("remove"), ["stop"]))
        }, [
          createVNode(Y)
        ], 10, xe)
      ], 2);
    };
  }
});
var Ee = S(Te, [["__scopeId", "data-v-dfb6ab09"]]);
var Ne = { class: "input-placeholder" };
var Pe = defineComponent({
  __name: "Placeholder",
  props: {
    text: {},
    placeholderSlot: { type: Function }
  },
  setup(p) {
    return (i, e) => (openBlock(), createElementBlock("div", Ne, [
      i.placeholderSlot ? (openBlock(), createBlock(resolveDynamicComponent(i.placeholderSlot), { key: 0 })) : (openBlock(), createElementBlock(Fragment, { key: 1 }, [
        createTextVNode(toDisplayString(i.text), 1)
      ], 64))
    ]));
  }
});
var Fe = S(Pe, [["__scopeId", "data-v-d650edcf"]]);
var qe = ["data-state"];
var Ke = ["id", "aria-expanded", "aria-describedby", "aria-description", "aria-labelledby", "aria-label", "aria-required", "aria-owns", "aria-controls"];
var Ue = ["data-value"];
var We = ["id", "aria-labelledby", "disabled"];
var ze = defineComponent({
  __name: "Select",
  props: mergeModels({
    options: {},
    displayedOptions: {},
    placeholder: { default: "Select an option" },
    isClearable: { type: Boolean, default: true },
    isDisabled: { type: Boolean, default: false },
    isSearchable: { type: Boolean, default: true },
    isMulti: { type: Boolean, default: false },
    isTaggable: { type: Boolean, default: false },
    isLoading: { type: Boolean, default: false },
    isMenuOpen: { type: Boolean, default: void 0 },
    hideSelectedOptions: { type: Boolean, default: true },
    shouldAutofocusOption: { type: Boolean, default: true },
    closeOnSelect: { type: Boolean, default: true },
    teleport: { default: void 0 },
    inputId: { default: void 0 },
    classes: { default: void 0 },
    uid: { default: Se() },
    aria: { default: void 0 },
    disableInvalidVModelWarn: { type: Boolean, default: false },
    filterBy: { type: Function, default: (p, i, e) => i.toLowerCase().includes(e.toLowerCase()) },
    getOptionValue: { type: Function, default: (p) => p.value },
    getOptionLabel: { type: Function, default: (p) => p.label }
  }, {
    modelValue: { required: true },
    modelModifiers: {}
  }),
  emits: mergeModels(["optionSelected", "optionDeselected", "optionCreated", "menuOpened", "menuClosed", "search"], ["update:modelValue"]),
  setup(p, { emit: i }) {
    const e = p, s = i, l = useSlots(), o = useModel(p, "modelValue"), h = useTemplateRef("container"), O = useTemplateRef("input"), y = useTemplateRef("indicators"), a = ref(""), u = ref(false), m = ref(-1), f = computed(() => {
      const t = e.displayedOptions || e.options;
      (t == null ? void 0 : t.length) || console.warn("[vue3-select-component warn]: No options or displayedOptions were provided to the component.");
      const d = t.map((B) => ({
        ...B,
        label: e.getOptionLabel(B),
        value: e.getOptionValue(B)
      })), v = (B) => B.filter(
        (x) => e.hideSelectedOptions && Array.isArray(o.value) ? !o.value.includes(x.value) : true
      );
      if (e.isSearchable && a.value) {
        const B = d.filter((x) => e.filterBy(x, e.getOptionLabel(x), a.value));
        return e.isMulti ? v(B) : B;
      }
      return e.isMulti ? v(d) : d;
    }), g = computed(() => {
      if (e.isMulti)
        return Array.isArray(o.value) ? o.value.map((d) => e.options.find((v) => e.getOptionValue(v) === d)).filter((d) => d !== void 0) : (e.disableInvalidVModelWarn || console.warn(`[vue3-select-component warn]: The v-model provided should be an array when using \`isMulti\` prop, instead it was: ${o.value}`), []);
      const t = e.options.find((d) => e.getOptionValue(d) === o.value);
      return t ? [t] : [];
    });
    function k() {
      e.isDisabled || (u.value = true, e.shouldAutofocusOption && (m.value = e.options.findIndex((t) => !t.disabled)), O.value && O.value.focus(), s("menuOpened"));
    }
    function M() {
      u.value = false, a.value = "", s("search", ""), s("menuClosed");
    }
    function V() {
      u.value ? M() : k();
    }
    function K(t) {
      var _a;
      ((_a = y.value) == null ? void 0 : _a.containerRef) && !y.value.containerRef.contains(t.target) && k();
    }
    const G = (t) => {
      t.disabled || (e.isMulti ? Array.isArray(o.value) ? o.value.find((v) => v === t.value) ? o.value = o.value.filter((v) => v !== t.value) : o.value = [...o.value, t.value] : (o.value = [t.value], e.disableInvalidVModelWarn || console.warn(`[vue3-select-component warn]: The v-model provided should be an array when using \`isMulti\` prop, instead it was: ${o.value}. Since an option has been selected, the component automatically converted the v-model to an array.`)) : o.value = t.value, s("optionSelected", t), a.value = "", e.closeOnSelect && M(), O.value && O.value.blur());
    }, E = (t) => {
      e.isMulti && !e.isDisabled && (Array.isArray(o.value) ? (o.value = o.value.filter((d) => d !== t.value), s("optionDeselected", t)) : e.disableInvalidVModelWarn || console.warn(`[vue3-select-component warn]: The v-model provided should be an array when using \`isMulti\` prop, instead it was: ${o.value}`));
    }, J = () => {
      e.isMulti ? (o.value = [], s("optionDeselected", null)) : (o.value = void 0, s("optionDeselected", g.value[0])), u.value && M(), O.value && O.value.blur();
    }, Q = () => {
      s("optionCreated", a.value), a.value = "", M();
    }, ee = (t) => {
      t.key === "Tab" ? M() : t.code === "Space" && !u.value && a.value.length === 0 && (t.preventDefault(), t.stopImmediatePropagation(), k());
    };
    return provide(Z, e), provide(X, {
      vmodel: o,
      availableOptions: f,
      selectedOptions: g,
      menuOpen: u,
      focusedOption: m,
      containerRef: h,
      search: a,
      openMenu: k,
      closeMenu: M,
      toggleMenu: V,
      handleControlClick: K,
      setOption: G,
      removeOption: E,
      createOption: Q
    }), watch(
      () => a.value,
      () => {
        a.value && (s("search", a.value), u.value || k());
      }
    ), watch(
      () => e.isMenuOpen,
      (t, d) => {
        d === void 0 && t === void 0 || (t ? k() : M());
      },
      { immediate: true }
    ), (t, d) => {
      var _a, _b, _c, _d, _e2, _f, _g, _h, _i;
      return openBlock(), createElementBlock("div", {
        ref: "container",
        dir: "auto",
        class: normalizeClass(["vue-select", [{ open: u.value, typing: u.value && a.value.length > 0, disabled: t.isDisabled }, (_a = e.classes) == null ? void 0 : _a.container]]),
        "data-state": u.value ? "open" : "closed"
      }, [
        createBaseVNode("div", {
          class: normalizeClass(["control", [{ focused: u.value, disabled: e.isDisabled }, (_b = e.classes) == null ? void 0 : _b.control]]),
          onClick: d[3] || (d[3] = (v) => K(v))
        }, [
          createBaseVNode("div", {
            id: `vue-select-${t.uid}-combobox`,
            class: normalizeClass(["value-container", [{ multi: t.isMulti, "has-value": g.value.length > 0 }, (_c = e.classes) == null ? void 0 : _c.valueContainer]]),
            role: "combobox",
            "aria-expanded": u.value,
            "aria-describedby": t.placeholder,
            "aria-description": t.placeholder,
            "aria-labelledby": (_d = t.aria) == null ? void 0 : _d.labelledby,
            "aria-label": g.value.length ? g.value.map(t.getOptionLabel).join(", ") : "",
            "aria-required": (_e2 = t.aria) == null ? void 0 : _e2.required,
            "aria-owns": `vue-select-${t.uid}-listbox`,
            "aria-controls": `vue-select-${t.uid}-listbox`,
            "aria-haspopup": "true"
          }, [
            !g.value[0] && !a.value.length ? (openBlock(), createBlock(Fe, {
              key: 0,
              text: t.placeholder,
              "placeholder-slot": l.placeholder,
              class: normalizeClass((_f = e.classes) == null ? void 0 : _f.placeholder)
            }, null, 8, ["text", "placeholder-slot", "class"])) : !e.isMulti && g.value[0] ? (openBlock(), createElementBlock("div", {
              key: 1,
              class: normalizeClass(["single-value", [(_g = e.classes) == null ? void 0 : _g.singleValue]]),
              onClick: d[0] || (d[0] = (v) => k())
            }, [
              l.value ? (openBlock(), createBlock(resolveDynamicComponent(l.value), {
                key: 0,
                option: g.value[0]
              }, null, 8, ["option"])) : (openBlock(), createElementBlock(Fragment, { key: 1 }, [
                createTextVNode(toDisplayString(t.getOptionLabel(g.value[0])), 1)
              ], 64))
            ], 2)) : e.isMulti && g.value.length ? (openBlock(true), createElementBlock(Fragment, { key: 2 }, renderList(g.value, (v) => {
              var _a2, _b2, _c2;
              return openBlock(), createElementBlock(Fragment, {
                key: v.value
              }, [
                l.tag ? (openBlock(), createBlock(resolveDynamicComponent(l.tag), {
                  key: 0,
                  option: v,
                  "remove-option": () => E(v)
                }, null, 8, ["option", "remove-option"])) : (openBlock(), createBlock(Ee, {
                  key: 1,
                  label: t.getOptionLabel(v),
                  classes: {
                    multiValue: (_a2 = e.classes) == null ? void 0 : _a2.multiValue,
                    multiValueLabel: (_b2 = e.classes) == null ? void 0 : _b2.multiValueLabel,
                    multiValueRemove: (_c2 = e.classes) == null ? void 0 : _c2.multiValueRemove
                  },
                  onRemove: (B) => E(v)
                }, null, 8, ["label", "classes", "onRemove"]))
              ], 64);
            }), 128)) : createCommentVNode("", true),
            createBaseVNode("div", {
              class: normalizeClass(["input-container", [{ typing: u.value && a.value.length > 0 }, (_h = e.classes) == null ? void 0 : _h.inputContainer]]),
              "data-value": a.value
            }, [
              withDirectives(createBaseVNode("input", {
                id: t.inputId,
                ref: "input",
                "onUpdate:modelValue": d[1] || (d[1] = (v) => a.value = v),
                class: normalizeClass(["search-input", (_i = e.classes) == null ? void 0 : _i.searchInput]),
                autocapitalize: "none",
                autocomplete: "off",
                autocorrect: "off",
                spellcheck: "false",
                tabindex: "0",
                type: "text",
                "aria-autocomplete": "list",
                "aria-labelledby": `vue-select-${t.uid}-combobox`,
                disabled: t.isDisabled,
                placeholder: "",
                onMousedown: d[2] || (d[2] = (v) => k()),
                onKeydown: ee
              }, null, 42, We), [
                [vModelText, a.value]
              ])
            ], 10, Ue)
          ], 10, Ke),
          createVNode(Be, {
            ref: "indicators",
            "has-selected-option": g.value.length > 0,
            "is-menu-open": u.value,
            "is-clearable": t.isClearable,
            "is-loading": t.isLoading,
            "is-disabled": t.isDisabled,
            slots: { clear: l.clear, dropdown: l.dropdown, loading: l.loading },
            onClear: J,
            onToggle: V
          }, null, 8, ["has-selected-option", "is-menu-open", "is-clearable", "is-loading", "is-disabled", "slots"])
        ], 2),
        (openBlock(), createBlock(Teleport, {
          to: t.teleport,
          disabled: !t.teleport,
          defer: true
        }, [
          u.value ? (openBlock(), createBlock(Ae, {
            key: 0,
            modelValue: o.value,
            "onUpdate:modelValue": d[4] || (d[4] = (v) => o.value = v),
            slots: {
              option: l.option,
              "menu-header": l["menu-header"],
              "no-options": l["no-options"],
              "taggable-no-options": l["taggable-no-options"]
            }
          }, null, 8, ["modelValue", "slots"])) : createCommentVNode("", true)
        ], 8, ["to", "disabled"]))
      ], 10, qe);
    };
  }
});
var je = S(ze, [["__scopeId", "data-v-c5806535"]]);
export {
  je as default
};
//# sourceMappingURL=vue3-select-component.js.map
